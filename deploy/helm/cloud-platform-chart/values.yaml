global:
   tls:
      issuer: &globalissuer "ca-issuer"
   cloudplatform:
      hostname: &globalhostname "5gmeta-platform.eu"
      scheme: &globalscheme "https"
      deployment: dev
      username: &globalusername "5gmeta-platform"
      password: &globalpassword "5gmeta-platform"
      dbrootpassword: &globaldbrootpassword "5gmeta-platform"
      email: "admin@5gmeta-platform.eu"
    
   mariadb:
     mariadbref: mariadb-cluster
     privileges: "ALL PRIVILEGES" 
     username: "5gmeta-platform"
     password: "5gmeta-platform"
     databases:
       - "dataflowdb"
       - "discoverydb"

   broker:
     username: "5gmeta-platform"
     password: "5gmeta-platform"

   keycloak:
     postgresql:
        replicas: 1
        username: "5gmeta-platform"
        password: "5gmeta-platform"

   ferretdb:
     username: "5gmeta-platform"
     password: "5gmeta-platform"
     database: "license-database"
     imagetag: 2.5.0
     postgresqlimagetag: 17-0.106.0-ferretdb-2.5.0
     replicas: 1

   kafka:
     clustername: cloud-platform

   kafkaui:
     username: "admin"
     password: "5gmeta-platform"

   oauth2:
     issuer: &oauthissuer "5gmeta-platform.eu/identity"
     realm: 5gmeta
     apisix:
       client: apisix
       secret: T7uuYjxAaxsUMoVClujNCksyAEh0rgW7

apisix:
    fullnameOverride: "apisix"
    control:
      enabled: false
    etcd:
      enabled: false
    service:
      type: NodePort
    ingress:
      enabled: true
      hosts:
        - host: *globalhostname
          paths:
            - "/"
      className: "nginx"
      tls:
        - hosts:
          - *globalhostname
          secretName: apisix-clould-platform-tls
      pathType: Prefix
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
        nginx.ingress.kubernetes.io/proxy-buffering: "on"
        nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
        nginx.ingress.kubernetes.io/proxy-busy-buffers-size: 256k
        cert-manager.io/issuer: *globalissuer

    extraVolumes:
      - name: routes
        configMap:
          name: apisix-routes

    extraVolumeMounts:
      - name: routes
        mountPath: /usr/local/apisix/conf/apisix.yaml
        subPath: apisix.yaml

    apisix: 
      deployment:
        mode: "standalone"
        role: data_plane
        role_data_plane:
          config_provider: yaml
      admin:
        enabled: false

kube-prometheus-stack:
  fullnameOverride: kube-prometheus
  prometheus-node-exporter:
    fullnameOverride: prometheus-node-exporter
  grafana:
    fullnameOverride: grafana
    adminUser: admin
    adminPassword: Grafana-Admin-2025-2026
    dashboards:
      default:
        msql-dashboard:
          gnetId: 14031
          revision: 5
          datasource: Prometheus
    grafana.ini:
      server:
        domain: *globalhostname
        root_url: https://5gmeta-plaform.eu/grafana/
        serve_from_sub_path: true


# MariaDB used to store the dataflows
mariadb-operator:
  fullnameOverride: "mariadb-operator"

mariadb-cluster:
  fullnameOverride: "mariadb-cluster"
  mariadb:
    galera:
      enabled: false
    replicas: 1
    rootPasswordSecretKeyRef:
      name: mariadb
      key: root-password
      generate: true
    image: mariadb:lts-ubi9
    storage:
      size: 10Gi

cloudnative-pg:
  fullnameOverride: "cloudnative-pg"
  crds:
    create: false

# Kafka UI
kafka-ui:
  fullnameOverride: "kafka-ui"
  existingConfigMap: "kafka-ui-configmap"

# 5GMETA Cloud Platform API Server
apiserver-chart:
  fullnameOverride: apiserver

dashboard-chart:
  fullnameOverride: dashboard
  image:
    tag: dev

figegmeta-kafka-chart:
  fullnameOverride: ""
