# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class GeolocationTile(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, zoom_level: int=18, tile_id: str=None):  # noqa: E501
        """GeolocationTile - a model defined in Swagger

        :param zoom_level: The zoom_level of this GeolocationTile.  # noqa: E501
        :type zoom_level: int
        :param tile_id: The tile_id of this GeolocationTile.  # noqa: E501
        :type tile_id: str
        """
        self.swagger_types = {
            'zoom_level': int,
            'tile_id': str
        }

        self.attribute_map = {
            'zoom_level': 'zoom-level',
            'tile_id': 'tile-id'
        }
        self._zoom_level = zoom_level
        self._tile_id = tile_id

    @classmethod
    def from_dict(cls, dikt) -> 'GeolocationTile':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GeolocationTile of this GeolocationTile.  # noqa: E501
        :rtype: GeolocationTile
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zoom_level(self) -> int:
        """Gets the zoom_level of this GeolocationTile.


        :return: The zoom_level of this GeolocationTile.
        :rtype: int
        """
        return self._zoom_level

    @zoom_level.setter
    def zoom_level(self, zoom_level: int):
        """Sets the zoom_level of this GeolocationTile.


        :param zoom_level: The zoom_level of this GeolocationTile.
        :type zoom_level: int
        """

        self._zoom_level = zoom_level

    @property
    def tile_id(self) -> str:
        """Gets the tile_id of this GeolocationTile.


        :return: The tile_id of this GeolocationTile.
        :rtype: str
        """
        return self._tile_id

    @tile_id.setter
    def tile_id(self, tile_id: str):
        """Sets the tile_id of this GeolocationTile.


        :param tile_id: The tile_id of this GeolocationTile.
        :type tile_id: str
        """

        self._tile_id = tile_id
