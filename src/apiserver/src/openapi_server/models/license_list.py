# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.license import License  # noqa: F401,E501
from openapi_server import util


class LicenseList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, licenses: List[License]=None, total_records: int=None):  # noqa: E501
        """LicenseList - a model defined in Swagger

        :param licenses: The licenses of this LicenseList.  # noqa: E501
        :type licenses: List[License]
        :param total_records: The total_records of this LicenseList.  # noqa: E501
        :type total_records: int
        """
        self.swagger_types = {
            'licenses': List[License],
            'total_records': int
        }

        self.attribute_map = {
            'licenses': 'licenses',
            'total_records': 'total_records'
        }
        self._licenses = licenses
        self._total_records = total_records

    @classmethod
    def from_dict(cls, dikt) -> 'LicenseList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The license-list of this LicenseList.  # noqa: E501
        :rtype: LicenseList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def licenses(self) -> List[License]:
        """Gets the licenses of this LicenseList.


        :return: The licenses of this LicenseList.
        :rtype: List[License]
        """
        return self._licenses

    @licenses.setter
    def licenses(self, licenses: List[License]):
        """Sets the licenses of this LicenseList.


        :param licenses: The licenses of this LicenseList.
        :type licenses: List[License]
        """

        self._licenses = licenses

    @property
    def total_records(self) -> int:
        """Gets the total_records of this LicenseList.

        Total number of Licenses available  # noqa: E501

        :return: The total_records of this LicenseList.
        :rtype: int
        """
        return self._total_records

    @total_records.setter
    def total_records(self, total_records: int):
        """Sets the total_records of this LicenseList.

        Total number of Licenses available  # noqa: E501

        :param total_records: The total_records of this LicenseList.
        :type total_records: int
        """

        self._total_records = total_records
